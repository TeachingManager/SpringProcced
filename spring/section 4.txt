ApplicationContext는 스프링 컨테이너
ApplicationContext는 인터페이스

애노테이션 기반 자바설정 클래스로 스프링 컨테이너 만들기
AppConfig.class

스프링 컨테이너 생성 ->	스프링 컨테이너
			-스프링 빈 저장소
			-빈 이름	-빈 객체
		-> AppConfig.class 구성 정보 활용

스프링 빈 등록

스프링 빈 의존관계 설정 준비

스프링 빈 의존간계 설정 완료
-설정 정보를 참고해서 의존관계 주입
-단순히 자바 코드를 호출하는 것 같지만 차이가 있다. (싱글톤 컨테이너에서..)
-자바 코드로 스프링 빈을 등록하면 생성자를 호출하면서 자동으로 설정된다


BeanFactory
스프링 컨테이너의 최상위 인터페이스
스프링 빈을 관리, 조회
getBean()제공

ApplicationContext
BeanFactory 기능을 모두 상속받아서 제공
애플리케이션 개발에 수많은 부가기능이 필요
-메시지소스를 활용한 국제화 기능
-환경변수
ㅇ로컬, 개발, 운영들을 구분해서 처리
-애플리케이션 이벤트
ㅇ이벤트를 발행하고 구독하는 모델을 편리하게 지원
-편리한 리소스 조회
ㅇ파일, 클래스패스, 외부 등에서 리소스를 편리하게 조회


스프링 빈 설정 메타 정보 - BeanDefinition
추상화
스프링 컨테이너는 BeanDefinition에만 의존

SpringBean을 만들 때 직접적으로 등록, 팩토리 빈을 이용해 등록