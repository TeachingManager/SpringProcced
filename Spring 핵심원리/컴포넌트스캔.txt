ComponentScan 을 사용하면
@Configuration 역시 등록이 되어버리기 때문에, 제외시켜 주어야한다.

스프링 빈에 등록하고자 하는 객체들 위에 @Component를 붙여주고,
@ComponentScan 을 가지고 해당 객체들을 모두 가져온다.
이렇게 가져온 class 들의 클래스명들을 빈 이름으로 등록해준다. (단 맨 앞글자는 소문자, @Component("이름") 으로 지정도 가능)


이때 스프링 빈에 등록 한 후 의존관계 주입은
@Autowired 를 생성자 위에 작성해 의존관계를 주입시켜준다.

이렇게 된다면 AppConfig에서 따로 의존관계를 작성해줄 필요는 없다.
@Autowired 로 작성이 된다면,
우선 호출된 객체 타입으로 먼저 조회를 시작한다. (자식이 둘 이상이면? 당연히 충돌)


CompnentScan은 모든 코드를 찾는다. ( 라이브러리 포함)
따라서 basePackages = {"hello.core.member", "hello.core.order"} 의 속성을 추가하여 해당 패키지 만 찾게 할 수 도 있다.

@ComonentScan
은 @Component, @Controller, @Service, @Repository, @Configuration 모두 가져온다.
이렇게 가져오는 기능은 java 가 아닌 Spring 이 지원하는 기능이다. (컴포넌트 사이에는 상속관계가 없기 때문)


@Filter 을 이용해서 특정 컴포넌트만 가져올 수 있다.
이때의 가져올 class를 자바 annotation을 이용해서 만들고
위에

@Target({ElementType.TYPE})
@Retention(RetentionPolicy.RUNTIME)
@Documented

을 만들어서 component 로 인식되게 하면 된다.


## 중복 등록 충돌 ##
자동 빈 등록 안에서 충돌 나면 오류가 발생한다.
하지만 수동빈(@Bean) 과 자동빈(@Component 내부)이 충돌이 난다면,
수동빈이 오버라이딩 되게 된다.



