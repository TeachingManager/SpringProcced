해당 로직이 얼마나 걸리는지 알기 위해서 
System.currentTimeMillis(); 을 이용해서 현재 시간을 찍고 그걸 이용해서 계산한다.

그러나 이는 일일히 작업해야하는 치명적인 문제가 있다.


따라서 AOP 를 만들어 쓰는게 중요하다.

위에서 일일히 작업했던 시작시간, 끝나는 시간 계산하는 try, finally 문을 
따로 자바 패키지 안의 클래스안에 만들어둔다.
@Aspect 컴폰넌트를 사용한다.

public Object execute(ProceedingJoingPoint joinPoint) thorws Throwable{


@Around("execution(* hello.hellospring..*(..))")  // 범위 hello.hellospring 아래의 전범위 hello.hellospring.service 하면 service 내에서만.
// 요 안에 작성

}

그리고 다 작성이 되면 스프링 bean 에 등록이 되어야한다.
@Component 를 붙여서 등록하거나,
SpringConfig 에 넣어서 작성하다.


AOP 가 등록되어 있을 경우 , spring bean 에 등록 되어있는걸 체크한 spring 이

프록시 memberService 를 만들어 Controller 와 연결한다.

원래는 Controller 가 직접 memberService 와의 의존관계를 가지는 것과 대비된다.

